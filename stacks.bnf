// Copyright Â© 2020 aggronmagi <czy463@163.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

////////////////////////////////////////////////////////////////////////////////
// parser
////////////////////////////////////////////////////////////////////////////////
_sign : ['+'|'-'];
_integer : '0' - '9';
_hex : _integer | 'a'-'f' | 'A'-'F' | '?';
_letter : 'a' - 'z' | 'A' - 'Z' | '_' | '/' |'.'|'*'|':'|'@'|'-'|'%'|'!'; 
_identifier : _letter|_integer;
tok_int: _sign _integer {_integer} | _integer {_integer};
tok_hex: '0' 'x' _hex {_hex} | '+' '0' 'x' _hex {_hex};
tok_identifier:  _letter{_identifier};
!whitespace : ' ' | '\t' | '\r' | '(' |')' |'{'|'}'  ;
tok_enter: '\n';


////////////////////////////////////////////////////////////////////////////////
<<
import "github.com/aggronmagi/gstacks/stacks/ast"
>>
////////////////////////////////////////////////////////////////////////////////

Start:
	Goroutines						<< ast.CheckGoroutines($0) >>
;


Goroutines:
	empty								<< ast.NewGoroutines() >>
|	Goroutines Goroutine				<< ast.AppendGoroutines($0, $1) >>
| 	Goroutines tok_enter Goroutine		<< ast.AppendGoroutines($0, $2) >>
;

Goroutine:
	"goroutine" tok_int "[" GStatus "]:" tok_enter GStacks	<< ast.NewGoroutine($1,$3,$6) >>
;

GStatus:
	tok_identifier											<< ast.NewStatus(0, $0) >>
|	tok_identifier "," tok_int "minutes"					<< ast.NewStatus($2, $0) >>
|	tok_identifier tok_identifier							<< ast.NewStatus(0, $0, $1) >>
|	tok_identifier tok_identifier "," tok_int "minutes"		<< ast.NewStatus($3, $0, $1) >>
;

GStacks:
	empty								<< ast.NewStacks() >>
|	GStacks GStack 						<< ast.AppendStack($0, $1) >>
;

GStack:
	GFuncCall tok_identifier tok_hex tok_enter					<< ast.NewStack($0, $1) >>
|	GFuncCall tok_identifier tok_enter 							<< ast.NewStack($0, $1) >>
;

GFuncCall:
	tok_identifier GARGS tok_enter								 << ast.NewCall($0) >>
|	tok_identifier tok_identifier tok_identifier GARGS tok_enter << ast.NewCall($0,$1,$2) >>
|	"created" "by" tok_identifier tok_identifier tok_identifier GARGS tok_enter << ast.NewCall($0,$1,$2,$3,$4) >>
|	"created" "by" tok_identifier GARGS tok_enter								 << ast.NewCall($0,$1, $2) >>
;

GARGS:
	empty
|	GARGS tok_hex
|	GARGS "," tok_hex
|	GARGS "..."
|	GARGS "," "..."
|	GARGS "_"
;